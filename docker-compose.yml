version: '3.5'

services:

  #PHP Service
  app:
    build:
      context: .docker/app
      dockerfile: Dockerfile
    image: tbee_app
    container_name: app
    restart: unless-stopped
    working_dir: /var/www
    volumes:
      - ./:/var/www
    depends_on:
      - mysql
      - redis
      - laravel_echo_server
    networks:
      - tbee_network


  #Nginx Service
  web:
    image: nginx:1.14-alpine
    container_name: web
    restart: unless-stopped
    ports:
      - "2020:80"
    volumes:
      - ./:/var/www
      - .docker/nginx/nginx.conf:/etc/nginx/conf.d/default.conf
    networks:
      - tbee_network

  # DB UI management service
  phpmyadmin:
    image: phpmyadmin/phpmyadmin:4.9
    container_name: phpmyadmin
    environment:
      PMA_HOST: mysql
      PMA_PORT: 3306
    restart: unless-stopped
    ports:
      - 8080:80
    depends_on:
      - mysql
    networks:
      - tbee_network

  #MySQL Service
  mysql:
    image: mysql:5.7
    container_name: mysql
    restart: unless-stopped
    environment:
      MYSQL_DATABASE: ${DB_DATABASE}
      MYSQL_USER: ${DB_USERNAME}
      MYSQL_PASSWORD: ${DB_PASSWORD}
      MYSQL_ROOT_PASSWORD: rootpass
    volumes:
      - .docker/mysql:/docker-entrypoint-initdb.d
    networks:
      - tbee_network

  laravel_echo_server:
    build:
      context: .docker/laravel-echo-server
      dockerfile: Dockerfile
    image: tbee_echo_server
    container_name: laravel_echo_server
    volumes:
      - .env:/app/.env
    restart: unless-stopped
    networks:
      - tbee_network

  redis:
    image: redis:5-alpine
    container_name: redis
    restart: unless-stopped
    networks:
      - tbee_network

networks:
  tbee_network:
    driver: bridge

